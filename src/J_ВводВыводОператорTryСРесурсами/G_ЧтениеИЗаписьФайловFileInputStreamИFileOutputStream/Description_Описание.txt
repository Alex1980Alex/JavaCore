- Запись файлов и класс FileOutputStream
Класс FileOutputStream предназначен для записи байтов в файл.
Он является производным от класса OutputStream, поэтому наследует всю его функциональность.
Через конструктор класса FileOutputStream задается файл, в который производится запись.
Класс поддерживает несколько конструкторов:
FileOutputStream(String filePath)
FileOutputStream(File fileObj)
FileOutputStream(String filePath, boolean append)
FileOutputStream(File fileObj, boolean append)

Файл задается либо через строковый путь, либо через объект File.
Второй параметр - append задает способ записи:
eсли он равен true, то данные дозаписываются в конец файла,
а при false - файл полностью перезаписывается.

Для создания объекта FileOutputStream используется конструктор,
принимающий в качестве параметра путь к файлу для записи.
Если такого файла нет, то он автоматически создается при записи.
Так как здесь записываем строку, то ее надо сначала перевести в массив байтов.
И с помощью метода write строка записывается в файл.
При этом необязательно записывать весь массив байтов.
Используя перегрузку метода write(), можно записать и одиночный байт:
fos.write(buffer[0]); // запись первого байта

- Чтение файлов и класс FileInputStream
Для считывания данных из файла предназначен класс FileInputStream,
который является наследником класса InputStream и поэтому реализует все его методы.
Для создания объекта FileInputStream мы можем использовать ряд конструкторов.
Наиболее используемая версия конструктора в качестве параметра принимает путь к считываемому файлу:
FileInputStream(String fileName) throws FileNotFoundException

Если файл не может быть открыт, например, по указанному пути такого файла не существует,
то генерируется исключение * FileNotFoundException*.

Классы FileInputStream и FileOutputStream предназначены прежде всего для записи двоичных файлов,
то есть для записи и чтения байтов. И хотя они также могут использоваться для работы
с текстовыми файлами, но все же для этой задачи больше подходят другие классы.

- Чтение и запись текстовых файлов. Класс FileWriter. Класс FileReader
Для полноценной работы с текстовыми файлами служат совсем другие классы,
которые являются наследниками абстрактных классов Reader и Writer.

Класс FileWriter является производным от класса Writer. Он используется для записи текстовых файлов.
Чтобы создать объект FileWriter, можно использовать один из следующих конструкторов:
FileWriter(File file)
FileWriter(File file, boolean append)
FileWriter(FileDescriptor fd)
FileWriter(String fileName)
FileWriter(String fileName, boolean append)

Так, в конструктор передается либо путь к файлу в виде строки, либо объект File,
который ссылается на конкретный текстовый файл. Параметр append указывает,
должны ли данные дозаписываться в конец файла (если параметр равен true),
либо файл должен перезаписываться.

Класс FileReader наследуется от абстрактного класса Reader и предоставляет функциональность
для чтения текстовых файлов.
Для создания объекта FileReader мы можем использовать один из его конструкторов:
FileReader(String fileName)
FileReader(File file)
FileReader(FileDescriptor fd)