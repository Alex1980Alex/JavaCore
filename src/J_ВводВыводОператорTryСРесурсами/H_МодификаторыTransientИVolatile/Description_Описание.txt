В языке программирования Java ключевые слова transient и volatile используются для управления
поведением переменных и полей в многопоточной среде и сериализации объектов.
Вот как они работают:
transient:
- transient - это модификатор, который применяется к переменным-членам класса.
- Когда переменная помечена как transient, она не участвует в процессе сериализации объекта.
- Это означает, что значение этой переменной не сохраняется при сериализации объекта,
и она будет иметь значение по умолчанию при десериализации.
- Используется, например, когда в классе есть члены данных, которые не должны быть сохранены
при сериализации, например, временные переменные или кэши.
Пример:
import java.io.*;
class MyClass implements Serializable {
    private transient int transientVar = 10;
    private int nonTransientVar = 20;
}
// При сериализации transientVar будет игнорироваться,
// а nonTransientVar будет сохранен.

volatile:
- volatile - это модификатор, который применяется к переменным-членам класса.
- Он используется для гарантии видимости переменной между потоками.
- Переменная, объявленная как volatile, не будет кэшироваться в локальных кэшах потоков,
и каждый доступ к этой переменной будет выполняться напрямую из общей памяти.
- volatile обычно используется для флагов или переменных, которые разделяются между несколькими
потоками и должны быть видимыми и актуальными для всех потоков.
Пример:
class SharedResource {
    private volatile boolean flag = false;

    public void setFlagTrue() {
        flag = true;
    }

    public boolean isFlagTrue() {
        return flag;
    }
}
// При использовании flag в нескольких потоках, его состояние всегда будет актуальным,
// благодаря модификатору volatile.