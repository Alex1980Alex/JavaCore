Главным потоком Java вы можете управлять с помощью объекта Thread, как и с другими потоками.
Главный поток представляет собой обычный экземпляр класса Thread, и вы можете вызывать
на нем различные методы для управления его выполнением.

Вот несколько примеров:
- Остановка главного потока:
Вы можете вызвать метод Thread.sleep() в главном потоке, чтобы приостановить его выполнение
на заданное количество миллисекунд. Это может быть полезно для добавления задержки в вашем приложении.
Пример:
public class Main {
    public static void main(String[] args) throws InterruptedException {
        System.out.println("Главный поток начал выполнение.");

        // Приостановка главного потока на 2 секунды
        Thread.sleep(2000);

        System.out.println("Главный поток продолжает выполнение.");
    }
}
- Прерывание главного потока:
Вы также можете вызвать метод Thread.interrupt() для прерывания выполнения главного потока.
Обратите внимание, что это не завершит программу, но вызовет исключение InterruptedException,
которое вы можете обработать.
Пример:
public class Main {
    public static void main(String[] args) {
        System.out.println("Главный поток начал выполнение.");

        // Прерывание главного потока
        Thread.currentThread().interrupt();

        try {
            // Попытка выполнить операцию, которая может быть прервана
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            System.out.println("Главный поток был прерван.");
        }

        System.out.println("Главный поток завершил выполнение.");
    }
}
- Ожидание завершения других потоков:
Главный поток может ожидать завершения выполнения других потоков с помощью метода Thread.join().
Этот метод блокирует главный поток до тех пор, пока указанный поток не завершит свое выполнение.
Пример:
public class Main {
    public static void main(String[] args) throws InterruptedException {
        System.out.println("Главный поток начал выполнение.");

        Thread anotherThread = new Thread(() -> {
            System.out.println("Другой поток начал выполнение.");
            // Допустим, здесь выполняются некоторые длительные операции
            System.out.println("Другой поток завершил выполнение.");
        });

        anotherThread.start();
        anotherThread.join(); // Главный поток ждет, пока другой поток завершится

        System.out.println("Главный поток завершил выполнение.");
    }
}

Таким образом, главный поток в Java также является объектом класса Thread,
и вы можете использовать различные методы этого класса для управления его выполнением,
как и для любых других потоков.