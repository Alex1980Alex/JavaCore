Для создания нового потока в Java, вы можете использовать два основных подхода:
наследование от класса Thread или реализацию интерфейса Runnable.
Вот примеры обоих способов:
Создание потока путем наследования от класса Thread:

1. Вы можете создать новый класс, который наследует класс Thread и переопределить его метод run(),
чтобы указать код, который будет выполняться в новом потоке.
Затем создайте экземпляр этого класса и вызовите метод start(),
чтобы запустить поток.
class MyThread extends Thread {
    public void run() {
        // Код, который будет выполняться в новом потоке
    }
}

public class Main {
    public static void main(String[] args) {
        MyThread thread = new MyThread();
        thread.start(); // Запуск потока
    }
}
2. Создание потока путем реализации интерфейса Runnable:
Этот способ позволяет более гибко управлять ресурсами и кодом, который будет выполняться в потоке.
Создайте класс, который реализует интерфейс Runnable и переопределите его метод run().
Затем создайте экземпляр класса Thread, передав объект Runnable в его конструктор,
и вызовите метод start().
class MyRunnable implements Runnable {
    public void run() {
        // Код, который будет выполняться в новом потоке
    }
}

public class Main {
    public static void main(String[] args) {
        MyRunnable runnable = new MyRunnable();
        Thread thread = new Thread(runnable);
        thread.start(); // Запуск потока
    }
}
Оба эти способа создают новый поток, который выполняет код, определенный в методе run().
Важно помнить, что порядок выполнения потоков может быть непредсказуемым,
и вам может потребоваться использовать механизмы синхронизации,
чтобы правильно координировать работу разных потоков и избежать проблем конкурентности.





