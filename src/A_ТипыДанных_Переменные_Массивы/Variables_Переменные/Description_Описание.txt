Переменные в Java - это именованные контейнеры, которые используются для хранения данных в программе.
В Java существует несколько типов переменных, их объявление и использование может зависеть от их типа.
Основная форма объявления переменной:
тип идентификатор [= значение ] [, идентификатор [= значение ] ... ] ;
Тип - один из примитивных типов Java либо имя класса или интерфейса.
Идентификатор - это имя переменной.
Значение (опционально) - начальное значение переменной.

Локальное объявление переменных с неявным определением типа
- Использовать var для объявления переменных, особенно в случаях,
когда тип данных можно легко определить из присвоенного значения.
- var также можно использовать в циклах for-each для объявления переменных цикла.
Ограничения:
- Вы не можете использовать var для параметров метода, параметров конструктора
или полей (переменных экземпляра).
- Оно предназначено в основном для локальных переменны.

- Локальные переменные (Local Variables):
Объявляются внутри блока кода, метода или конструктора.
Доступны только в пределах блока, в котором они объявлены.
Должны быть инициализированы перед использованием.
- Поля класса (Instance Variables):
Объявляются внутри класса, но вне методов.
Они являются членами объекта класса и имеют разные значения для каждого объекта этого класса.
По умолчанию инициализируются значениями по умолчанию (нулями или null).
- Статические поля (Static Variables):
Объявляются с использованием ключевого слова static.
Они являются общими для всех объектов этого класса и существуют в единственном экземпляре.
Инициализируются значениями по умолчанию.
- Параметры метода (Method Parameters):
Используются для передачи данных в методы.
Объявляются в сигнатуре метода и доступны только внутри этого метода.
- Финальные переменные (Final Variables):
Объявляются с использованием ключевого слова final.
Их значение нельзя изменить после инициализации.
Часто используются для создания констант.

В Java, переменные имеют два важных атрибута: область видимости (scope) и время жизни (lifetime).
Эти атрибуты определяют, где и когда переменные могут быть использованы в программе.

Область видимости (Scope):

Область видимости переменной определяет, где в программе можно обратиться к этой переменной.
В Java существует несколько уровней областей видимости, основные из которых включают:
- Блочная область видимости:
Локальные переменные имеют блочную область видимости и видны только внутри блока кода
(например, внутри метода или цикла), в котором они объявлены.
- Область видимости класса:
Поля класса (instance variables) и статические поля класса (static variables)
видны в пределах всего класса и доступны для всех методов класса.
- Область видимости пакета (package scope):
Если переменная не имеет модификатор доступа (public, private, protected),
то она видна в пределах всего пакета, где находится класс.
- Область видимости protected:
Переменные с модификатором protected видны внутри класса, в пределах его пакета
и в производных классах (наследники).
- Область видимости private: Переменные с модификатором private видны только внутри класса,
где они объявлены.

Время жизни (Lifetime):

- Время жизни переменной определяет, насколько долго переменная существует в памяти
во время выполнения программы.
- Локальные переменные имеют короткое время жизни и существуют только во время выполнения блока,
в котором они объявлены.
- Поля класса и статические поля класса существуют на протяжении жизни объекта класса
и всего приложения, соответственно.
- Переменные, объявленные как статические (с ключевым словом static),
существуют до завершения выполнения программы.








