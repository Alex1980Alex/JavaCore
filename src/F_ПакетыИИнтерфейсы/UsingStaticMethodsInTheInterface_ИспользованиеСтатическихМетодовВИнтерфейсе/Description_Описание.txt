Статические методы в интерфейсе были введены в Java 8 и позволяют включать в интерфейсы методы,
которые могут быть вызваны без создания экземпляра класса, реализующего этот интерфейс.
Статические методы интерфейса полезны для предоставления служебной функциональности,
которая не зависит от конкретных экземпляров классов, реализующих интерфейс.

Основные характеристики статических методов в интерфейсе:
- Они объявляются с использованием ключевого слова static.
- Они имеют реализацию в интерфейсе.
- Они могут быть вызваны с использованием имени интерфейса, без создания экземпляра класса.
- Они не могут быть переопределены в классах, реализующих интерфейс.

Пример интерфейса с статическим методом:
public interface MyInterface {
    void regularMethod(); // Обычный метод

    static void staticMethod() {
        System.out.println("Это статический метод интерфейса");
    }
}
В этом примере staticMethod() - это статический метод интерфейса MyInterface.

Он имеет реализацию по умолчанию и может быть вызван следующим образом:
MyInterface.staticMethod();

Классы, реализующие интерфейс MyInterface, также могут вызывать этот статический метод
через имя интерфейса.

Пример использования статического метода в классе:
public class MyClass implements MyInterface {
    @Override
    public void regularMethod() {
        System.out.println("Реализация обычного метода");
    }

    public static void main(String[] args) {
        MyClass obj = new MyClass();
        obj.regularMethod(); // Вызывает обычный метод
        MyInterface.staticMethod(); // Вызывает статический метод через имя интерфейса
    }
}

Статические методы в интерфейсах полезны, например, для предоставления утилитарных
методов или методов, не зависящих от конкретных экземпляров классов, их реализующих.