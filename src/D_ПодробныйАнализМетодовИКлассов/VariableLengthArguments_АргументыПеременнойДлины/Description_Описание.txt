В Java, вы можете использовать аргументы переменной длины (varargs) для определения методов,
которые принимают переменное количество аргументов одного типа.
Аргументы переменной длины позволяют вам передавать любое количество аргументов
заданного типа в метод без явного создания массива аргументов.

Вот основные аргументы переменной длины в Java:

- Синтаксис:
Аргументы переменной длины объявляются с использованием троеточия (...) после
типа данных в списке параметров метода.
public void myMethod(int... numbers) {
    // тело метода
}

- Аргументы переменной длины должны быть последними в списке параметров метода.
public void myMethod(String name, int... numbers) { // Правильно
    // тело метода
}
Следующий код будет ошибочным:
public void myMethod(int... numbers, String name) { // Неправильно!
    // тело метода
}

- В методе аргументы переменной длины рассматриваются как массив заданного типа.
Вы можете обращаться к ним как к обычному массиву.
public void printNumbers(int... numbers) {
    for (int num : numbers) {
        System.out.println(num);
    }
}

- Вы можете вызывать методы с аргументами переменной длины,
передавая им любое количество аргументов заданного типа.
myMethod(1, 2, 3, 4);
myMethod(5, 6, 7);
myMethod(8);

- Если у вас есть перегруженные методы, один из которых принимает аргументы переменной длины,
убедитесь, что у них нет неоднозначности в вызове.
Компилятор Java будет выбирать наиболее подходящий метод на основе переданных аргументов.

- Аргументы переменной длины удобны для создания более гибких методов,
которые могут принимать разное количество аргументов в зависимости от конкретной ситуации.


