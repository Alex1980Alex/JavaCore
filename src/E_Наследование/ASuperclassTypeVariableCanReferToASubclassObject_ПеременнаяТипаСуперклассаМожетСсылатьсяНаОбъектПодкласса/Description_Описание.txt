В Java переменная суперкласса может ссылаться на объект подкласса.
Это одна из основных особенностей полиморфизма в объектно-ориентированном программировании.
Процесс, когда переменная суперкласса ссылается на объект подкласса, называется "полиморфизмом".

Вот пример:
class Animal {
    public void makeSound() {
        System.out.println("Animal makes a sound");
    }
}

class Dog extends Animal {
    @Override
    public void makeSound() {
        System.out.println("Dog barks");
    }
}

public class Main {
    public static void main(String[] args) {
        Animal myAnimal = new Dog(); // Переменная суперкласса ссылается на объект подкласса
        myAnimal.makeSound(); // Вызывает метод из класса Dog, если он переопределен
    }
}

В этом примере переменная myAnimal типа Animal ссылается на объект типа Dog.
Когда вызывается метод makeSound(), вызывается версия метода из класса Dog,
потому что объект, на который ссылается переменная, является экземпляром класса Dog.

Этот механизм полиморфизма позволяет создавать более гибкий и расширяемый код,
так как вы можете использовать переменные суперкласса для работы с различными подклассами
без необходимости знать конкретный тип объекта во время компиляции.