В Java ключевое слово final может использоваться для классов, методов и переменных,
и оно имеет различное значение в каждом контексте.
Давайте рассмотрим его использование в контексте наследования:
- final для классов:
Если класс объявлен как final, это означает, что он не может быть унаследован.
То есть нельзя создать подклассы для этого класса.
Пример:
final class FinalClass {
    // ...
}
// Нельзя создать подкласс для FinalClass
// class Subclass extends FinalClass {} // Ошибка компиляции
- final для методов:
Если метод объявлен как final, это означает, что его нельзя переопределить в подклассах.
То есть подклассы должны использовать метод из суперкласса без изменений.
Пример:
class Parent {
    final void doSomething() {
        // ...
    }
}

class Child extends Parent {
    // Нельзя переопределить final метод
    // void doSomething() {} // Ошибка компиляции
}
- final для переменных (полей):
Если поле объявлено как final, это означает, что оно является константой и
не может быть изменено после его инициализации.
Константы обычно именуются заглавными буквами и инициализируются при объявлении или
в конструкторе.
class MyClass {
    final int CONSTANT_VALUE = 42;
}

Использование final в контексте наследования предотвращает изменение
или расширение функциональности класса или метода в подклассах.
Это может быть полезным, если вы хотите зафиксировать часть кода и предотвратить
его изменение в будущем.
