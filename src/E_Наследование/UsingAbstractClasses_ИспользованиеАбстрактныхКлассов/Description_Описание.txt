Абстрактные классы в Java - это классы, которые не могут быть
инстанциированы (то есть, вы не можете создать объект абстрактного класса),
но они могут содержать абстрактные методы, которые должны быть реализованы в подклассах.
Абстрактные классы используются для создания шаблонов для других классов
и обеспечивают полиморфизм.

Вот как создать и использовать абстрактный класс в Java:
- Определите абстрактный класс, используя ключевое слово abstract перед объявлением класса:
abstract class Animal {
    String name;

    public Animal(String name) {
        this.name = name;
    }

    // Абстрактный метод, который должен быть реализован в подклассах
    abstract void makeSound();
}
В абстрактном классе могут быть обычные методы и поля, как и в обычных классах.
- Определите подклассы, которые расширяют абстрактный класс
и реализуют все его абстрактные методы:
class Dog extends Animal {
    public Dog(String name) {
        super(name);
    }

    @Override
    void makeSound() {
        System.out.println(name + " лает: Гав-гав!");
    }
}

class Cat extends Animal {
    public Cat(String name) {
        super(name);
    }

    @Override
    void makeSound() {
        System.out.println(name + " мяучит: Мяу-мяу!");
    }
}
- Теперь вы можете создать объекты подклассов и вызвать их методы:
public class Main {
    public static void main(String[] args) {
        Animal myDog = new Dog("Бобик");
        Animal myCat = new Cat("Мурка");

        myDog.makeSound(); // Вывод: "Бобик лает: Гав-гав!"
        myCat.makeSound(); // Вывод: "Мурка мяучит: Мяу-мяу!"
    }
}
Абстрактные классы полезны, когда у вас есть общая функциональность,
которую вы хотите предоставить для нескольких классов,
но конкретная реализация методов может отличаться для каждого класса.
Абстрактные методы обязывают подклассы предоставить свою собственную реализацию для этих методов,
обеспечивая таким образом согласованность и гибкость в вашей архитектуре программы.





