package B_Операции.BooleanLogicalOperations_БулевскиеЛогическиеОперации;

public class BooleanLogicalOperations_БулевскиеЛогическиеОперации {
    public static void main(String[] args) {
        // Логическое И (&):
        System.out.println("Логическое И (&):");
        boolean условие1 = true;
        boolean условие2 = false;
        boolean результат = условие1 & условие2;
        System.out.println(результат); // Выводит "false", так как оба условия не выполнены

        // Логическое ИЛИ (|):
        System.out.println("Логическое ИЛИ (|):");
        условие1 = true;
        условие2 = false;
        boolean результат_2 = условие1 | условие2;
        System.out.println(результат_2); // Выводит "true", так как хотя бы одно из условий выполнено

        // Логическое исключающее ИЛИ (^)
        System.out.println("Логическое исключающее ИЛИ (^)");
        условие1 = true;
        условие2 = false;
        boolean результат3 = условие1 ^ условие2;
        System.out.println(результат3); // Выводит "true", так как только одно из условий истинно

        boolean результат4 = условие1 ^ условие1;
        System.out.println(результат4); // Выводит "false", так как оба условия истинны

        // Короткозамкнутое логическое И (&&)
        System.out.println("Короткозамкнутое логическое И (&&)");
        условие1 = true;
        условие2 = false;
        boolean результат_5 = условие1 && условие2;
        // Выводит "false", так как второй операнд не вычисляется из-за короткозамкнутости
        System.out.println(результат_5);

        // Короткозамкнутое логическое ИЛИ (||):
        System.out.println("Короткозамкнутое логическое ИЛИ (||):");
        условие1 = true;
        условие2 = false;
        boolean результат_6 = условие1 || условие2;
        // Выводит "true", так как второй операнд не вычисляется из-за короткозамкнутости
        System.out.println(результат_6);

        // Логическое НЕ (!):
        System.out.println("Логическое НЕ (!):");
        boolean условие = true;
        boolean инвертированное_условие = !условие;
        System.out.println(инвертированное_условие); // Выводит "false", так как условие инвертировано

        // Логическое НЕ (!), пример №2:
        System.out.println("Логическое НЕ (!), пример №2:");
        условие = false;
        if (!условие) {
            System.out.println("Условие не выполняется");
        } else {
            System.out.println("Условие выполняется");
        }

        // Операция с присваиванием "И" (AND-assignment):
        System.out.println("Операция с присваиванием \"И\" (AND-assignment):");
        условие1 = true;
        условие2 = false;
        условие1 &= условие2; // Эквивалентно условие1 = условие1 && условие2;
        System.out.println(условие1); // Выводит "false"

        // Операция с присваиванием "ИЛИ" (OR-assignment):
        System.out.println("Операция с присваиванием \"ИЛИ\" (OR-assignment):");
        условие1 = true;
        условие2 = false;
        условие1 |= условие2; // Эквивалентно условие1 = условие1 || условие2;
        System.out.println(условие1); // Выводит "true"

        // Операция с присваиванием "Исключающее ИЛИ" (XOR-assignment):
        System.out.println("Операция с присваиванием \"Исключающее ИЛИ\" (XOR-assignment):");
        условие1 = true;
        условие2 = false;
        условие1 ^= условие2; // Эквивалентно условие1 = условие1 ^ условие2;
        System.out.println(условие1); // Выводит "true"

        // Операция сравнения на равенство (==)
        System.out.println("Операция сравнения на равенство (==)");

        // Сравнение чисел:
        System.out.println("Сравнение чисел:");
        int число1 = 5;
        int число2 = 5;
        результат = число1 == число2;
        System.out.println(результат); // Выводит "true", так как число1 равно числу2

        // Сравнение строк:
        System.out.println("Сравнение строк:");
        String строка1 = "Привет";
        String строка2 = "Мир";
        результат = строка1 == строка2;
        System.out.println(результат); // Выводит "false", так как строки различны

        // Сравнение объектов:
        System.out.println("Сравнение объектов:");

        // В случае с объектами, операция == сравнивает ссылки на объекты,
        // а не их содержимое. Две ссылки считаются равными,
        // если они указывают на один и тот же объект.

        строка1 = "Привет";
        строка2 = строка1; // строка2 теперь ссылается на тот же объект, что и строка1
        результат = строка1 == строка2;
        // Выводит "true", так как обе ссылки указывают на один и тот же объект
        System.out.println(результат);

        // Важно отметить, что операция == может не всегда работать ожидаемым образом
        // при сравнении объектов, особенно при сравнении пользовательских объектов.
        // В таких случаях, для сравнения содержимого объектов,
        // часто используются методы equals().

        // Операция сравнения на неравенство (!=)
        System.out.println("Операция сравнения на неравенство (!=)");

        // Сравнение чисел:
        System.out.println("Сравнение чисел:");
        число1 = 5;
        число2 = 10;
        результат = число1 != число2;
        System.out.println(результат); // Выводит "true", так как число1 не равно числу2

        // Сравнение строк:
        System.out.println("Сравнение строк:");
        строка1 = "Привет";
        строка2 = "Мир";
        результат = строка1 != строка2;
        System.out.println(результат); // Выводит "true", так как строки различны

        // Сравнение объектов:
        System.out.println("Сравнение объектов:");
        строка1 = "Привет";
        строка2 = "Мир";
        результат = строка1 != строка2;
        System.out.println(результат); // Выводит "true", так как строки различны






    }
}
