Побитовые операции языка Java:
 ~  Побитовое унарное НЕ
 &  Побитовое И
 |  Побитовое ИЛИ
 ^ Побитовое исключающее ИЛИ
 >>  Сдвиr вправо
 >>> Сдвиr вправо с заполнением нулями
 <<  Сдвиr влево
 &=  Побитовое И с присваиванием
 |=  Побитовое ИЛИ с присваиванием
 ^= Побитовое исключающее ИЛИ с присваиванием
 >>=  Сдвиr вправо с присваиванием
 >>>= Сдвиr вправо с заполнением нулями и присваиванием
 <<=  Сдвиr влево с присваиванием

Побитовое И (&):
Пример: int result = a & b;
Эта операция выполняет логическое И между каждой парой соответствующих битов в двух числах.
Результат будет содержать единицы только в позициях, где оба операнда имеют единицу.

Побитовое ИЛИ (|):
Пример: int result = a | b;
Эта операция выполняет логическое ИЛИ между каждой парой соответствующих битов в двух числах.
Результат будет содержать единицы в позициях, где хотя бы один из операндов имеет единицу.

Побитовое исключающее ИЛИ (^):
Пример: int result = a ^ b;
Эта операция выполняет логическое исключающее ИЛИ между каждой парой соответствующих битов
в двух числах. Результат будет содержать единицы в позициях, где только один из операндов имеет единицу, но не оба.

Побитовое отрицание (~):
Пример: int result = ~a;
Эта операция инвертирует все биты числа, что означает замену 0 на 1 и 1 на 0.

Сдвиг влево (<<):
Пример: int result = a << n;
Эта операция сдвигает биты числа "a" влево на "n" позиций, добавляя нули в
освободившиеся позиции. Это эквивалентно умножению числа "a" на 2 в степени "n".

Сдвиг вправо (>>):
Пример: int result = a >> n;
Эта операция сдвигает биты числа "a" вправо на "n" позиций,
при этом заполняя освободившиеся позиции копиями старшего бита (знакового бита).
Если "a" положительное число, то слева добавляются нули, если отрицательное, то единицы.

Сдвиг вправо с заполнением нулями (>>>):
Пример: int result = a >>> n;
Эта операция сдвигает биты числа "a" вправо на "n" позиций,
при этом заполняя освободившиеся позиции нулями.
Всегда добавляются нули слева.












