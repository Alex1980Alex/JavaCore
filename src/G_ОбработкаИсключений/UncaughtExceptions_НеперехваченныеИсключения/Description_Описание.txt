В Java, неперехваченные исключения (unchecked exceptions) - это исключения,
которые не обрабатываются с помощью блока try-catch или не объявляются
в сигнатуре метода с помощью ключевого слова throws.
Когда такое исключение возникает во время выполнения программы и не обрабатывается,
оно может привести к преждевременному завершению программы и выдаче информации об ошибке.

Неперехваченные исключения обычно наследуются от класса RuntimeException или его подклассов
и могут возникнуть из-за ошибок программиста или непредвиденных ситуаций
во время выполнения программы.

Примеры неперехваченных исключений:
1. NullPointerException: Возникает, когда программа пытается обратиться к методу
или свойству объекта, который имеет значение null.
String str = null;
System.out.println(str.length()); // NullPointerException

2. ArrayIndexOutOfBoundsException:
Возникает, когда попытка доступа к элементу массива с индексом, выходящим за границы массива.
int[] arr = {1, 2, 3};
System.out.println(arr[5]); // ArrayIndexOutOfBoundsException

3. ArithmeticException:
Возникает при попытке деления на ноль.
int result = 10 / 0; // ArithmeticException

4. ClassCastException:
Возникает, когда происходит попытка привести объект к неверному типу.
Object obj = new Integer(10);
String str = (String) obj; // ClassCastException

5. NumberFormatException:
Возникает, когда попытка преобразования строки в числовой формат не удается из-за
некорректного формата.
String str = "abc";
int num = Integer.parseInt(str); // NumberFormatException

Неперехваченные исключения следует избегать и обрабатывать, чтобы обеспечить более надежное
и понятное поведение программы.
Для этого можно использовать блоки try-catch или проверять значения
и предпринимать соответствующие действия, чтобы избежать возникновения таких исключений.