package L_ЛямбдаВыражения.I_ЛямбдаВыраженияИЗахватПеременных.A_ПримерЗахватаЛокальнойПеременнойЗзОбъемлющейОбластиВидимости;

public class VarCapture {
    public static void main(String[] args) {
        // Локальная переменная, которая может быть захвачена
        int num = 10;

        MyFunc myLambda = (n) -> {

            // Эта строка кода недопустима, поскольку в ней
            // предпринимается попытка видоизменить значение переменной num
            //num++;


            // Такое применение переменной num допустимо,
            // поскольку она не видоизменяется

            int v = num + n;




            return v;

        };
        System.out.println(myLambda.func(num));

        // Эта строка кода тоже приведет к ошибке, поскольку
        // в ней нарушается действительно конечное состояние переменной num

        // num = 9;
    }
}
/*
Следует особо подчеркнуть, что в лямбда-выражении можно использовать
и видоизменять переменную экземпляра из вызывающего его класса. Но нельзя
использовать локальную переменную из объемлющей его области видимости,
если только эта переменная не является действительно конечной.
 */
