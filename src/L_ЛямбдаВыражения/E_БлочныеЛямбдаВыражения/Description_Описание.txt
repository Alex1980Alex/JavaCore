Блочное лямбда-выражение расширяет те виды операций, которые могут выполняться в лямбда-выражении,
поскольку оно допускает в своем теле наличие нескольких операторов. Например, в блочном лямбда-выражении
можно объявлять переменные, организовывать циклы, указывать операторы выбора if и switch,
создавать вложенные блоки и т.д.

Пример программы "A_ОпределениеФАКТОРИАЛА_ИспользуяЛямбдаВыражение", где блочное Лямбда-выражение
применяется для вычисления и возврата факториала
целочисленного значения. В данном примере программы на то, что в блочном лямбдавыражении объявляется
переменная result, организуется цикл * for* и указывается оператор return. Все эти действия вполне
допустимы в теле блочного лямбдавыражения. По существу, тело блока такого выражения аналогично телу метода.
Следует также иметь в виду, что когда в лямбда-выражении оказывается оператор return, он просто вызывает
возврат из самого лямбда-выражения, но не из объемлющего его метода.

В следующем примере "B_РазвернутьСтрокуВОбратномПорядкеИспользуяЛямбдаВыражение" программы,
блочное Лямбда-выражение изменяет строку на обратный порядок следования
символов в этой строке. В функциональном интерфейсе StringFunc объявляется метод getReversal(),
принимающий параметр типа String и возвращающий значение типа String. Следовательно, в лямбда-выражении
reverse тип параметра (str) должен быть выведен как String. Метод charAt() вызывается для параметра (str),
как для объекта типа String. Это вполне допустимо, поскольку тип String этого параметра выводится
автоматически.