Зачастую определять собственный функциональный интерфейс не требуется,
поскольку в пакете java.util.function предоставляется целый ряд предопределенных
функциональных интерфейсов.
UnaryOperator<T>   Выполняет унарную операцию над объектом типа Т и возвращает результат того же типа.
                   Содержит метод apply()
BinaryOperator<T>  Выполняет логическую операцию над двумя объектами типа T и возвращает результат
                   того же типа. Содержит метод apply()
Consumer<T>        Выполняет операцию над объектом типа T. Содержит метод accept()
Supplier<T>        Возвращает объект типа T. Содержит метод get()
Function<T, R>     Выполняет операцию над объектом типа Т и возвращает в результате объект типа R.
                   Содержит метод apply()
Predicate<T>       Определяет, удовлетворяет ли объект типа T некоторому ограничительному условию.
                   Возвращает логическое значение, обозначающее результат. Содержит метод test()