1. Метод valueOf():
- valueOf(String name) - это статический метод, который принимает строку с именем элемента перечисления
и возвращает соответствующий элемент перечисления.
- Если переданное имя не соответствует ни одному из элементов перечисления,
будет сгенерировано исключение IllegalArgumentException.
Пример использования valueOf():

System.out.println(Apple.valueOf("Winesap"));
будет Winesap.

При использовании метода valueOf() обязательно убедитесь,
что передаваемая строка соответствует имени элемента перечисления, иначе вы получите исключение.

2. Метод values() в Java является статическим методом, предоставляемым всем перечислениям (enums)
и используется для получения массива, содержащего все значения (константы) данного перечисления.

Вот пример использования метода values() в Java:
enum ДниНедели {
    ПОНЕДЕЛЬНИК, ВТОРНИК, СРЕДА, ЧЕТВЕРГ, ПЯТНИЦА, СУББОТА, ВОСКРЕСЕНЬЕ
}

public class ПримерValues {
    public static void main(String[] args) {
        // Использование метода values() для получения массива всех значений перечисления
        ДниНедели[] дни = ДниНедели.values();

        // Перебор и вывод всех значений перечисления
        for (ДниНедели день : дни) {
            System.out.println(день);
        }
    }
}

В этом примере метод values() вызывается на перечислении ДниНедели, и он возвращает массив,
содержащий все дни недели.
Затем выполняется цикл по этому массиву и выводятся все значения перечисления.

Этот метод полезен, когда вам нужно получить доступ ко всем значениям перечисления
без явного перечисления каждой константы.
Порядок значений в массиве соответствует порядку их объявления в самом перечислении.
