Рефлексия (reflection) - это механизм в Java, который позволяет программам анализировать и
манипулировать структурой классов, интерфейсов, методов, полей и других элементов во время выполнения.
Рефлексия дает вам доступ к метаданным вашей программы и позволяет выполнять такие операции,
как создание объектов, вызов методов, изменение полей и многое другое динамически,
без необходимости заранее известной информации о типах.

Вот примеры использования рефлексии в Java:
- Получение информации о классе:
Class<?> clazz = MyClass.class; // Получение объекта Class для класса MyClass
String className = clazz.getName(); // Получение имени класса
Field[] fields = clazz.getDeclaredFields(); // Получение всех полей класса
Method[] methods = clazz.getDeclaredMethods(); // Получение всех методов класса
- Создание объекта через рефлексию:
Class<?> clazz = MyClass.class;
Object instance = clazz.newInstance(); // Создание объекта класса MyClass
- Вызов метода через рефлексию:
Class<?> clazz = MyClass.class;
Object instance = clazz.newInstance();
Method method = clazz.getMethod("myMethod", String.class, int.class);
Object result = method.invoke(instance, "Hello, World!", 42); // Вызов метода myMethod
- Получение и изменение значения поля через рефлексию:
Class<?> clazz = MyClass.class;
Object instance = clazz.newInstance();
Field field = clazz.getDeclaredField("myField");
field.setAccessible(true); // Разрешение доступа к приватному полю
field.set(instance, "New Value"); // Установка нового значения поля
Object value = field.get(instance); // Получение значения поля

Обратите внимание, что рефлексия может быть мощным инструментом, но она также может повлечь
за собой проблемы с безопасностью и производительностью, если ее использовать неосторожно.
Например, изменение приватных полей или вызов приватных методов может нарушить инкапсуляцию и
безопасность вашего кода. Поэтому следует использовать рефлексию осторожно и только тогда,
когда это необходимо.