Записи (Records) - это новое введение в Java, которое было внедрено в Java 16 (JEP 395)
и предоставляет удобный способ создания классов, предназначенных в основном для хранения данных.
Записи являются короткой и ясной альтернативой обычным классам с большим количеством полей,
геттеров, сеттеров и других стандартных методов.

Вот как они работают:
1. Определение записи:
Для создания записи используют ключевое слово record, за которым идет имя записи и список полей,
разделенных запятыми.
Ниже приведен пример определения записи:
public record Person(String name, int age) {
}
2. Поля записи:
Поля записи автоматически становятся закрытыми и неизменяемыми. Они создаются при определении
записи и автоматически получают методы equals(), hashCode(), toString() и конструктор.
3. Создание экземпляров записи:
Вы можете создавать экземпляры записей так же, как и объекты других классов:
Person person = new Person("John", 30);
4. Доступ к полям:
Для доступа к полям записи вы можете использовать их имена без необходимости создавать геттеры:
String name = person.name();
int age = person.age();
5. Автоматически создаваемые методы:
Записи автоматически создают методы equals(), hashCode() и toString(),
что упрощает сравнение и вывод данных:
boolean isEqual = person1.equals(person2);
int hashCode = person.hashCode();
String info = person.toString();
6. Конструктор:
Записи автоматически создают конструктор, который принимает значения полей
и инициализирует экземпляр записи:
Person person = new Person("John", 30);
7. Изменение значений полей:
Поля записи являются неизменяемыми, поэтому, если вы хотите изменить значения полей,
вам нужно создать новый экземпляр записи.
Person updatedPerson = new Person("Jane", person.age());