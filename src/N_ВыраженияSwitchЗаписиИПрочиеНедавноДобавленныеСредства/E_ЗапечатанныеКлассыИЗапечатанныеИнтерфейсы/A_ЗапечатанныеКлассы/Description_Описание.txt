Запечатанные классы (sealed classes) были введены в Java в версии 16 как новая особенность языка.
Они позволяют разработчикам более точно управлять доступом к классам и наследованию.

Запечатанный класс в Java объявляется с использованием модификатора sealed. Этот класс может быть
наследован только определенными подклассами, которые явно указаны с помощью модификаторов permits.

Пример объявления запечатанного класса:
sealed class Shape permits Circle, Rectangle {
    // ...
}

final class Circle extends Shape {
    // ...
}

final class Rectangle extends Shape {
    // ...
}

В этом примере Shape - это запечатанный класс, и он разрешает только наследование от классов
Circle и Rectangle, которые объявлены с модификатором final.
Это означает, что нельзя создать другие подклассы Shape.

Запечатанные классы полезны для создания иерархий классов с ограниченными возможностями наследования,
что может способствовать улучшению безопасности и обеспечению более предсказуемой структуры программы.

Стоит отметить, что запечатанные классы вводятся для более строгого контроля над наследованием,
но они не ограничивают доступ к созданию экземпляров классов. Вы по-прежнему можете создавать
объекты всех классов, включая запечатанные, при условии, что они доступны.